// 모듈 정의 및 필요한 의존성 모듈 가져오기
sap.ui.define([
    "sap/ui/core/Control",          // UI5의 기본 Control 클래스
    "sap/m/RatingIndicator",        // 별점 매기기 컨트롤
    "sap/m/Label",                  // 텍스트 라벨 컨트롤
    "sap/m/Button"                  // 버튼 컨트롤
], (Control, RatingIndicator, Label, Button) => {
    "use strict";  // 엄격 모드 사용 선언
    
    // 사용자 정의 컨트롤 정의 시작
    return Control.extend("ui5.walkthrough.control.ProductRating", {
        // 컨트롤 메타데이터 정의
        metadata: {
            // 속성 정의
            properties: {
                value: { type: "float", defaultValue: 0 }  // 평가값 (기본값 0)
            },

            // 하위 컨트롤(aggregation) 정의
            aggregations: {
                _rating: { type: "sap.m.RatingIndicator", multiple: false, visibility: "hidden" },  // 별점 매기기 컨트롤 (숨김)
                _label: { type: "sap.m.Label", multiple: false, visibility: "hidden" },              // 텍스트 라벨 컨트롤 (숨김)
                _button: { type: "sap.m.Button", multiple: false, visibility: "hidden" }            // 버튼 컨트롤 (숨김)
            },

            // 이벤트 정의
            events: {
                change: {
                    parameters: {
                        value: { type: "int" }  // 이벤트 발생 시 전달되는 평가값
                    }
                }
            }
        },

        // 초기화 함수: 컨트롤 초기화 시 호출
        init() {
            // 별점 매기기 컨트롤 초기화 및 aggregation 설정
            this.setAggregation("_rating", new RatingIndicator({
                value: this.getValue(),            // 현재 평가값 설정
                iconSize: "2rem",                  // 아이콘 크기 설정
                visualMode: "Half",                // 반 점수(0.5) 허용
                liveChange: this._onRate.bind(this) // 평가값 변경 이벤트 핸들러 연결
            }));
            
            // 라벨 컨트롤 초기화 및 aggregation 설정
            this.setAggregation("_label", new Label({
                text: "{i18n>productRatingLabelInitial}"  // 초기 텍스트 설정 (i18n 모델 바인딩)
            }).addStyleClass("sapUiSmallMargin"));  // 스타일 클래스 추가

            // 버튼 컨트롤 초기화 및 aggregation 설정
            this.setAggregation("_button", new Button({
                text: "{i18n>productRatingButton}",    // 버튼 텍스트 설정 (i18n 모델 바인딩)
                press: this._onSubmit.bind(this)       // 버튼 클릭 이벤트 핸들러 연결
            }).addStyleClass("sapUiTinyMarginTopBottom"));  // 스타일 클래스 추가
        },

        // 평가값 설정 함수 (별점 매기기 값 변경 시 호출)
        setValue(fValue) {
            this.setProperty("value", fValue, true);  // 평가값을 속성으로 설정하고 내부 업데이트
            this.getAggregation("_rating").setValue(fValue);  // 별점 컨트롤의 값도 업데이트

            return this;  // 체이닝을 위해 this 반환
        },

        // 평가 리셋 함수 (별점, 라벨, 버튼 상태 초기화)
        reset() {
            const oResourceBundle = this.getModel("i18n").getResourceBundle();  // i18n 리소스 번들 가져오기

            this.setValue(0);  // 평가값 0으로 초기화
            this.getAggregation("_label").setDesign("Standard");  // 라벨 디자인 초기화
            this.getAggregation("_rating").setEnabled(true);  // 별점 매기기 활성화
            this.getAggregation("_label").setText(oResourceBundle.getText("productRatingLabelInitial"));  // 라벨 초기 텍스트로 설정
            this.getAggregation("_button").setEnabled(true);  // 버튼 활성화
        },

        // 별점 매기기 값 변경 시 호출되는 이벤트 핸들러
        _onRate(oEvent) {
            const oResourceBundle = this.getModel("i18n").getResourceBundle();  // i18n 리소스 번들 가져오기
            const fValue = oEvent.getParameter("value");  // 현재 평가값 가져오기

            this.setProperty("value", fValue, true);  // 평가값 속성으로 설정

            // 라벨 텍스트 업데이트 (현재 별점과 최대 별점 표시)
            this.getAggregation("_label").setText(oResourceBundle.getText("productRatingLabelIndicator", [fValue, oEvent.getSource().getMaxValue()]));
            this.getAggregation("_label").setDesign("Bold");  // 라벨 텍스트를 볼드로 설정
        },

        // 제출 버튼 클릭 시 호출되는 이벤트 핸들러
        _onSubmit(oEvent) {
            const oResourceBundle = this.getModel("i18n").getResourceBundle();  // i18n 리소스 번들 가져오기

            this.getAggregation("_rating").setEnabled(false);  // 별점 매기기 비활성화
            this.getAggregation("_label").setText(oResourceBundle.getText("productRatingLabelFinal"));  // 라벨 텍스트를 최종 텍스트로 설정
            this.getAggregation("_button").setEnabled(false);  // 버튼 비활성화
            this.fireEvent("change", {
                value: this.getValue()  // change 이벤트 발생 (현재 평가값 전달)
            });
        },

        // 렌더링 함수: 컨트롤을 화면에 출력하는 역할
        renderer(oRm, oControl) {
            oRm.openStart("div", oControl);  // div 태그 시작
            oRm.class("myAppDemoWTProductRating");  // 클래스 설정
            oRm.openEnd();  // 태그 닫기
            oRm.renderControl(oControl.getAggregation("_rating"));  // 별점 매기기 컨트롤 렌더링
            oRm.renderControl(oControl.getAggregation("_label"));  // 라벨 컨트롤 렌더링
            oRm.renderControl(oControl.getAggregation("_button"));  // 버튼 컨트롤 렌더링
            oRm.close("div");  // div 태그 닫기
        }
    });
});
